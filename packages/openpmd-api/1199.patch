From 6588e2b2ed362d6b3edd61f6448429bc87d20f3b Mon Sep 17 00:00:00 2001
From: Axel Huebl <axel.huebl@plasma.ninja>
Date: Mon, 14 Feb 2022 11:20:15 -0800
Subject: [PATCH 1/2] `setup.py`: Extra CMake Arg Control

---
 README.md                       |  2 ++
 docs/source/install/install.rst |  2 ++
 setup.py                        | 12 ++++++++++++
 3 files changed, 16 insertions(+)

diff --git a/README.md b/README.md
index 62cce7aec..fbee6a2a1 100644
--- a/README.md
+++ b/README.md
@@ -212,6 +212,8 @@ export CMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF
 python3 -m pip install openpmd-api --no-binary openpmd-api
 ```
 
+Additional CMake options can be passed via individual environment variables, which need to be prefixed with `openPMD_CMAKE_`.
+
 ### From Source
 
 [![Source Use Case](https://img.shields.io/badge/use_case-development-brightgreen)](https://cmake.org)
diff --git a/docs/source/install/install.rst b/docs/source/install/install.rst
index 3b5f54dcd..6df73eaae 100644
--- a/docs/source/install/install.rst
+++ b/docs/source/install/install.rst
@@ -115,6 +115,8 @@ For some exotic architectures and compilers, you might need to disable a compile
    # optional:                                                --user
    python3 -m pip install openpmd-api --no-binary openpmd-api
 
+Additional CMake options can be passed via individual environment variables, which need to be prefixed with ``openPMD_CMAKE_``.
+
 .. _install-cmake:
 
 .. only:: html
diff --git a/setup.py b/setup.py
index 3ad2306b7..7a03e5b05 100644
--- a/setup.py
+++ b/setup.py
@@ -79,6 +79,8 @@ def build_extension(self, ext):
             #   just as well win32 & cygwin (although Windows has no RPaths)
             cmake_args.append('-DCMAKE_INSTALL_RPATH=$ORIGIN')
 
+        cmake_args += extra_cmake_args
+
         cfg = 'Debug' if self.debug else 'Release'
         build_args = ['--config', cfg]
 
@@ -139,6 +141,16 @@ def build_extension(self, ext):
 CMAKE_INTERPROCEDURAL_OPTIMIZATION = os.environ.get(
     'CMAKE_INTERPROCEDURAL_OPTIMIZATION', None)
 
+# extra CMake arguments
+extra_cmake_args = []
+for k, v in os.environ.items():
+    extra_cmake_args_prefix = "openPMD_CMAKE_"
+    if k.startswith(extra_cmake_args_prefix) and \
+       len(k) > len(extra_cmake_args_prefix):
+        extra_cmake_args.append("-D{0}={1}".format(
+            k[len(extra_cmake_args_prefix):],
+            v))
+
 # https://cmake.org/cmake/help/v3.0/command/if.html
 if openPMD_USE_MPI.upper() in ['1', 'ON', 'TRUE', 'YES']:
     openPMD_USE_MPI = "ON"

From a7475164cf857c85d96338dd3e094487fcf0d18a Mon Sep 17 00:00:00 2001
From: Axel Huebl <axel.huebl@plasma.ninja>
Date: Mon, 14 Feb 2022 11:35:08 -0800
Subject: [PATCH 2/2] EMSCRIPTEN: Skip Py Extension

---
 CMakeLists.txt | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 121d4a559..0ec20798c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -686,7 +686,12 @@ if(openPMD_HAVE_PYTHON)
     endif()
     unset(_USE_PY_LTO)
 
-    pybind11_extension(openPMD.py)
+    if(EMSCRIPTEN)
+        set_target_properties(openPMD.py PROPERTIES
+            PREFIX "")
+    else()
+        pybind11_extension(openPMD.py)
+    endif()
     pybind11_strip(openPMD.py)
 
     set_target_properties(openPMD.py PROPERTIES CXX_VISIBILITY_PRESET "hidden"

From ce811262b4f71fc9638e4a7a3c3386b4e43b9128 Mon Sep 17 00:00:00 2001
From: Axel Huebl <axel.huebl@plasma.ninja>
Date: Mon, 14 Feb 2022 17:44:51 -0800
Subject: [PATCH] Wasm Setuptools: fix extension

---
 CMakeLists.txt |  2 +-
 setup.py       | 12 ++++++++++++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0ec20798..5da81d2a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -688,7 +688,7 @@ if(openPMD_HAVE_PYTHON)
 
     if(EMSCRIPTEN)
         set_target_properties(openPMD.py PROPERTIES
-            PREFIX "")
+            PREFIX "" SUFFIX ".emscripten_wasm32.so")
     else()
         pybind11_extension(openPMD.py)
     endif()
diff --git a/setup.py b/setup.py
index 7a03e5b0..154d23e7 100644
--- a/setup.py
+++ b/setup.py
@@ -35,6 +35,18 @@ class CMakeBuild(build_ext):
         for ext in self.extensions:
             self.build_extension(ext)
 
+    def get_ext_filename(self, ext_name):
+        r"""Convert the name of an extension (eg. "foo.bar") into the name
+        of the file from which it will be loaded (eg. "foo/bar.so", or
+        "foo\bar.pyd").
+        """
+        so_ext = os.getenv('SETUPTOOLS_EXT_SUFFIX', '.emscripten_wasm32.so')
+        filename = os.path.join(*ext_name.split('.')) + so_ext
+        print("++++++++++")
+        print("get_ext_filename({}): {}".format(ext_name, filename))
+        print("++++++++++")
+        return filename
+
     def build_extension(self, ext):
         extdir = os.path.abspath(os.path.dirname(
             self.get_ext_fullpath(ext.name)
-- 
2.25.1

